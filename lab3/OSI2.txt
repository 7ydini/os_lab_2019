Процесс-потомок получает собственную таблицу файловых дескрипторов, являющуюся копией таблицы процесса-родителя на момент вызова fork().

Это означает, что открытые файлы наследуются, но если процесс-потомок, например,

закроет какой-либо файл, то это не повлияет на таблицу дескрипторов процесса-родителя.

Для процесса-потомка очищаются все ожидающие доставки сигналы. Временная статистика выполнения процесса-потомка в таблицах ОС обнуляется.

Блокировки памяти и записи, установленные в процессе-родителе, не наследуются.




Расспараллеливание заключается в том, что один/несколько процессов будут выполняться одновременно, а не по очередности. 

В примере с суммой эл-тов массива можно разбить массив на несколько с n-м кол-вом эл-в, и складывать эл-ты всех массивов одновременно(в итоге суммировать все массивы).

Но это не всегда приемлемо, ведь процесс(ы) может быть не столь объемным, и быстрее будет выполнить его последовательно.




Функция getopt() разбирает аргументы командной строки.

Получая на вход число параметров команды (argc), массив указателей на эти параметры (argv) и строку с опциями (option string) (optstring),
getopt() возвращает первый параметр и задает некоторые глобальные переменные.

Функция getopt_long() принимает дополнительные параметры.

Функция getopt_long() позволяет обрабатывать сложные опции почти без дополнительных действий, направленных на улучшение функции.

Так же функция getopt_long() воспринимает и длинные опции, начинающиеся с двух дефисов.