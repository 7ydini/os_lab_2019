1) Выделение и освобождение памяти в куче Си. Заодно приведите пример с функцией realloc и последующим удалением созданного массива.
2) У кучи и стека есть какие-то ограничения? (Это важно знать Вам, как программисту).
3) Основы работы компилятора: препроцессор, компилятор, линковщик. Их роли и порядок работы.
4) У нас есть программа, которая использует статическую и динамическую библиотеки. В обе эти библиотеки были внесены изменения, нужно, чтобы программа работала с использованием этих изменений. Что нужно сделать?
5) Опции компилятора: -I, -l, -o (i большое и L маленькое))

1)
realloc изменяет величину выделенной памяти, на которую указывает указатель.
malloc и calloc выделяют память, но calloc также задаёт кол-во элементов.
free() очищает, выделенную colloc'ОМ и molloc'ОМ память.
Для realloc есть команда delete()
#include <stdlib.h>
#include <iostream>
#include <stdio.h>
#include <string.h>
int main(void)
{
char *p;
p = (char *)malloc(7); //выделим 7 байт
int k = 10;
for ( int i = 0; p[i] != NULL; i++)
{
	k += i;
	printf("%d\n", k);
}
printf("A Tenepb c 55 6a,zTaMu\n");
p = (char *)realloc(p, 55); //увеличим кол-во байт до 55

for (int i = 0; p[i] != NULL; i++)
{
	k += i;
	printf("%d\n", k);
}
printf(p);
free(p);
return 0;
}


2)
У стека есть ограничения, мы не можем превышать выделенный объем памяти.
Куча имеет динамическое выделение памяти, однако работает медленее стека.

3)Порядок соответсвует порядку перечисления
Препроцессор подключает внешние файлы, библиотеки.

Компилятор переводит данные препроцессора на машинный язык, понятный только ему, также он показывает нам
что не так с нашим кодом.(Выводит ошибки)

Линковщик связывает файл, получиный от компилятора, с библиотеками, или другими файлами. 
В результате линковки мы получаем exe файл


4)
Статическую библиотеку нужно будет переподключить, динамическая же рассчитана на такие изменения.


5)
-o file-name
Использовать file-name в качестве имени для создаваемого gcc файла (обычно это исполняемый файл).

-l
Передается компоновщику. Используется для добавления ваших собственных библиотек для поиска в процессе сборки.

-I
Используется для добавления ваших собственных каталогов для поиска заголовочных файлов в процессе сборки